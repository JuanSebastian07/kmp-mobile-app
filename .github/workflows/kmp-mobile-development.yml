name: KMP Build and Test
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=false"

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-disabled: true
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Clean project
      run: ./gradlew clean
      
    - name: Run Android tests
      run: ./gradlew testDebugUnitTest
      
    - name: Build Android APK
      run: ./gradlew assembleDebug
      
    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: composeApp/build/outputs/apk/debug/*.apk

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.4'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-disabled: true
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Clean project completely
      run: |
        ./gradlew clean
        rm -rf build/
        rm -rf shared/build/
        rm -rf composeApp/build/
        rm -rf iosApp/build/
        rm -rf ~/.gradle/caches/
        
    - name: Check system info
      run: |
        echo "Xcode version:"
        xcodebuild -version
        echo "Available iOS SDKs:"
        xcodebuild -showsdks | grep ios
        echo "Kotlin Native targets:"
        ./gradlew :shared:tasks --group="kotlin native" || echo "No kotlin native group found"
        
    - name: Build shared framework step by step
      run: |
        echo "Building commonMain..."
        ./gradlew :shared:compileKotlinMetadata --info
        echo "Building iosMain..."
        ./gradlew :shared:compileKotlinIosX64 --info
        echo "Linking framework..."
        ./gradlew :shared:linkDebugFrameworkIosX64 --info --stacktrace
        
    - name: Build iOS App
      run: |
        cd iosApp
        # Limpiar DerivedData
        rm -rf ~/Library/Developer/Xcode/DerivedData
        
        # Compilar con configuración más compatible
        xcodebuild -project iosApp.xcodeproj \
          -scheme iosApp \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' \
          -configuration Debug \
          clean build \
          CODE_SIGNING_ALLOWED=NO \
          CODE_SIGN_IDENTITY="" \
          PROVISIONING_PROFILE="" \
          OTHER_LDFLAGS="-lsqlite3" \
          LIBRARY_SEARCH_PATHS="/usr/lib" \
          HEADER_SEARCH_PATHS="/usr/include" \
          -allowProvisioningUpdates
          
    - name: Upload iOS App
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ios-app
        path: iosApp/build/Build/Products/Debug-iphonesimulator/*.app
