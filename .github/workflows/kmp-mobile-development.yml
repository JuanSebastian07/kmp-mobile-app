name: KMP Build and Test
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]
jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Run Android tests
      run: ./gradlew testDebugUnitTest
      
    - name: Build Android APK
      run: ./gradlew assembleDebug
      
    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: composeApp/build/outputs/apk/debug/*.apk

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Clean build
      run: ./gradlew clean
      
    - name: Build all iOS frameworks
      run: |
        ./gradlew :shared:linkDebugFrameworkIosX64
        ./gradlew :shared:linkDebugFrameworkIosSimulatorArm64
        ./gradlew :shared:linkDebugFrameworkIosArm64
      
    - name: Run iOS tests
      run: ./gradlew iosSimulatorArm64Test
      
    - name: Check if SQLite is available
      run: |
        echo "Checking SQLite availability..."
        find /Applications/Xcode.app -name "libsqlite3*" -type f 2>/dev/null || echo "SQLite not found in Xcode"
        ls -la /usr/lib/libsqlite3* 2>/dev/null || echo "SQLite not found in /usr/lib"
      
    - name: Build iOS App
      run: |
        cd iosApp
        # Listar simuladores disponibles
        xcrun simctl list devices available
        
        # Limpiar DerivedData
        rm -rf ~/Library/Developer/Xcode/DerivedData
        
        # Compilar con configuración explícita de SQLite
        xcodebuild -project iosApp.xcodeproj \
          -scheme iosApp \
          -destination 'generic/platform=iOS Simulator' \
          -configuration Debug \
          clean build \
          CODE_SIGNING_ALLOWED=NO \
          CODE_SIGN_IDENTITY="" \
          PROVISIONING_PROFILE="" \
          OTHER_LDFLAGS="-lsqlite3" \
          LIBRARY_SEARCH_PATHS="/usr/lib" \
          HEADER_SEARCH_PATHS="/usr/include"
          
    - name: Upload iOS App
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ios-app
        path: iosApp/build/Build/Products/Debug-iphonesimulator/*.app
