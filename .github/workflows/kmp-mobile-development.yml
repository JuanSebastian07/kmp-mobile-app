name: KMP Build and Test
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=false"

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-disabled: true
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Clean project
      run: ./gradlew clean
      
    - name: Run Android tests
      run: ./gradlew testDebugUnitTest
      
    - name: Build Android APK
      run: ./gradlew assembleDebug
      
    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: composeApp/build/outputs/apk/debug/*.apk

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.4'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-disabled: true
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Clean project completely
      run: |
        echo "Starting complete clean..."
        ./gradlew clean --stacktrace --info
        rm -rf build/
        rm -rf shared/build/
        rm -rf composeApp/build/
        rm -rf iosApp/build/
        rm -rf ~/.gradle/caches/
        echo "Clean completed successfully"
        
    - name: Check system info and dependencies
      run: |
        echo "=== System Information ==="
        echo "Xcode version:"
        xcodebuild -version
        echo "Available iOS SDKs:"
        xcodebuild -showsdks | grep ios
        echo "Available simulators:"
        xcrun simctl list devices available | head -20
        echo "=== SQLite Check ==="
        which sqlite3 || echo "sqlite3 not found in PATH"
        ls -la /usr/lib/libsqlite3* 2>/dev/null || echo "libsqlite3 not found in /usr/lib"
        echo "=== Gradle Tasks ==="
        ./gradlew :shared:tasks --group="build" --stacktrace --info || echo "No build group found"
        
    - name: Install missing dependencies
      run: |
        echo "Installing SQLite3..."
        brew install sqlite3 || echo "SQLite3 already installed"
        echo "Checking installation..."
        which sqlite3
        sqlite3 --version
        
    - name: Build shared framework step by step
      run: |
        echo "=== Building CommonMain ==="
        ./gradlew :shared:compileKotlinMetadata --stacktrace --info
        echo "=== Building iOS Main ==="
        ./gradlew :shared:compileKotlinIosX64 --stacktrace --info
        echo "=== Linking Framework ==="
        ./gradlew :shared:linkDebugFrameworkIosX64 --stacktrace --info --debug
        echo "=== Framework build completed ==="
        
    - name: Verify framework creation
      run: |
        echo "Checking if framework was created..."
        find . -name "*.framework" -type d | head -10
        ls -la shared/build/bin/iosX64/debugFramework/ || echo "Framework directory not found"
        
    - name: Build iOS App
      run: |
        cd iosApp
        echo "=== Cleaning Xcode DerivedData ==="
        rm -rf ~/Library/Developer/Xcode/DerivedData
        
        echo "=== Available simulators ==="
        xcrun simctl list devices available | grep "iPhone"
        
        echo "=== Building iOS App ==="
        xcodebuild -project iosApp.xcodeproj \
          -scheme iosApp \
          -destination 'platform=iOS Simulator,name=iPhone 14' \
          -configuration Debug \
          clean build \
          CODE_SIGNING_ALLOWED=NO \
          CODE_SIGN_IDENTITY="" \
          PROVISIONING_PROFILE="" \
          OTHER_LDFLAGS="-lsqlite3" \
          LIBRARY_SEARCH_PATHS="/usr/lib /opt/homebrew/lib" \
          HEADER_SEARCH_PATHS="/usr/include /opt/homebrew/include" \
          -allowProvisioningUpdates \
          -verbose
          
    - name: Upload iOS App
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ios-app
        path: iosApp/build/Build/Products/Debug-iphonesimulator/*.app
